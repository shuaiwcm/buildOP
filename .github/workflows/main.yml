name: 编译openwrt固件

on:
  workflow_dispatch:


jobs:
  build_op:
  
    name: 编译openwrt固件
    
    runs-on: ubuntu-22.04
    steps:
      - name: 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      - name: 检出代码
        uses: actions/checkout@v4
      - name: 克隆源码
        run: git clone https://github.com/coolsnowwolf/lede openwrt
      - name: 添加插件源
        run: |
          cd openwrt
          echo 'src-git OpenClash https://github.com/vernesong/OpenClash.git;master' >>feeds.conf.default
      - name: 更新插件源
        run: cd openwrt && ./scripts/feeds update -a
      - name: 安装插件源
        run: cd openwrt && ./scripts/feeds install -a
      - name: 加载自定义配置
        run: |
          mv .conifg openwrt/.config
          mv files openwrt/files
          cd openwrt
          sed -i 's/192.168.1.1/192.168.50.1/g' package/base-files/files/bin/config_generate
      - name: 下载软件包
        run: |
          cd openwrt
          make defconfig
          ./scripts/diffconfig.sh > seed.config
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: 编译固件
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
      - name: 整理成果
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f -name "*.bin") ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: 上传bin目录
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/
          
      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware/

      - name: 上传软件包
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/
